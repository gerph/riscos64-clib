---
# RISC OS 64 CI build
#
# The 'release' job is triggered when a tag starting with a 'v' is created,
# which will create a GitHub release for the repository with the name of the
# version tag. The release will be a draft, and should be updated with
# changes as you see fit.
#

name: RISC OS

# Controls when the action will run. Triggers the workflow on:
#   * push on any branch.
#   * tag creation for tags beginning with a 'v'
on:
  push:
    branches: ["master"]
    tags: ["v*"]
  # Pull request events happen on pull request state transitions, so we probably don't want this here.
  #pull_request:
  #  branches: ["*"]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: read

    outputs:
      version: ${{ steps.version.outputs.version }}
      leafname_bin: ${{ steps.version.outputs.leafname_bin }}
      leafname_lib: ${{ steps.version.outputs.leafname_lib }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Build the C library
        run: |
          cd clib
          make export

      - name: Build the absolutes
        run: |
          cd absolutes
          make all

      - name: Build the modules
        run: |
          cd modules
          make all

      - name: Build the utilities
        run: |
          cd utilities
          make all

      - name: Build the archives
        run: |
          zip -9r RISCOS64-Binaries.zip absolutes/*,ff8 modules/*,ffa utilities/*,ffc
          cd clib/export ; zip -9r ../../RISCOS64-CLib.zip *

      - name: Give the output a versioned name
        id: version
        run: |
          if [[ -f VersionNum ]] ; then
              version=$(sed '/MajorVersion / ! d ; s/.*MajorVersion *"\(.*\)"/\1/' VersionNum)
          else
              version=$(git rev-parse --short HEAD)
          fi
          echo "This is version: $version"
          leafname_bin="RISCOS64-Binaries-$version.zip"
          leafname_lib="RISCOS64-CLib-$version.zip"
          mv RISCOS64-Binaries.zip "RISCOS64-Binaries-$version.zip"
          mv RISCOS64-CLib.zip "RISCOS64-CLib-$version.zip"

          echo "version=$version" >> $GITHUB_OUTPUT
          echo "leafname_lib=$leafname_lib" >> $GITHUB_OUTPUT
          echo "leafname_bin=$leafname_bin" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: RISCOS64-binaries
          path: ${{ steps.version.outputs.leafname_bin }}

      - uses: actions/upload-artifact@v4
        with:
          name: RISCOS64-clib
          path: ${{ steps.version.outputs.leafname_lib }}

  test:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Download built RISC OS 64 binaries
        uses: actions/download-artifact@v4
        with:
          name: RISCOS64-binaries

      - name: Extract RISC OS 64 binaries
        run: |
          unzip "${{ needs.build.outputs.leafname_bin }}"

      - name: Obtain prerequisite build tool
        run: |
          # Fetch the build client
          curl -s -L -o riscos-build-online https://github.com/gerph/robuild-client/releases/download/v0.06/riscos-build-online && chmod +x riscos-build-online

      - name: Archive files to send
        run: |
          # Zip up the source to send to robuild
          zip -9r /tmp/source-archive.zip absolutes/*,ff8 utilities/*,ffc modules/*,ffa .robuild.yaml

      - name: Build through build.riscos.online
        run: |
          # Send the archive file to build service (timeout of 60 seconds)
          ./riscos-build-online -i /tmp/source-archive.zip -A aarch64 -a off -t 60 -o /tmp/built

  # The release only triggers when the thing that was pushed was a tag starting with 'v'
  release:
    needs:
      - build
      - test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Download built RISC OS 64 binaries
        uses: actions/download-artifact@v4
        with:
          name: RISCOS64-binaries

      - name: Download built RISC OS 64 binaries
        uses: actions/download-artifact@v4
        with:
          name: RISCOS64-clib

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          prerelease: false
          draft: true
          artifacts: "${{ needs.build.outputs.leafname_bin }},${{ needs.build.outputs.leafname_lib }}"
          artifactContentType: application/zip
